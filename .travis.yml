# This .travis.yml is modified from pandoc's at https://github.com/jgm/pandoc/blob/master/.travis.yml
language: generic
cache:
  directories:
    - $HOME/.ghc
    - $HOME/.stack
matrix:
  include:
  - os: linux
    arch: arm64
    dist: bionic
    addons:
      apt:
        packages:
          - ghc
          - cabal-install
before_install:
  # pandoc-nightly version
  - |
    printf "%s: %s\n" "pandoc-nightly version" "0.3"
before_script:
  # clone from git
  - mkdir ~/git
  - cd ~/git
  - git clone --depth 1 https://github.com/jgm/pandoc --branch master --single-branch
  - cd pandoc
  - git submodule update --init --recommend-shallow
  # get the current commit hash of pandoc
  - HASH=$(git rev-parse --short HEAD)
  # filename
  - |
    case "$TRAVIS_OS_NAME" in
      osx)   filename=pandoc-osx-$HASH                  ;;
      linux) filename="pandoc-${TRAVIS_CPU_ARCH}-$HASH" ;;
      *)     exit 1                                     ;;
    esac
script:
  # build
  - |
    if [[ "$TRAVIS_OS_NAME" == osx || "$TRAVIS_CPU_ARCH" == amd64 ]]; then
      stack setup
      stack build --flag 'pandoc:embed_data_files'
      cd ..
      # path to the pandoc executable
      path2pandoc="$(find pandoc/.stack-work/install -type f -name pandoc)"
    else
      cabal update
      cabal --version
      cabal install cabal-install
      cabal install --only-dependencies
      cabal configure --flags="embed_data_files https"
      cabal build
      cabal install
      path2pandoc="$CABALDIR/bin/pandoc"
    fi
  # debug
  - ls -aglh "$path2pandoc"
  - |
    "$path2pandoc" -v
after_success:
  # if it's a cron job, create git tag for GitHub Releases, only on Linux build
  - |
    if [[ "$TRAVIS_EVENT_TYPE" == cron && "$TRAVIS_OS_NAME" == linux ]]; then
      git config --global user.email "builds@travis-ci.com"
      git config --global user.name "Travis CI"
      export GIT_TAG="hash-$HASH"
      git tag "$GIT_TAG" -a -m "Generated tag from TravisCI build $TRAVIS_BUILD_NUMBER"
      git push --quiet https://$GH_TOKEN_SECURE@github.com/pandoc-extras/pandoc-nightly "$GIT_TAG" > /dev/null 2>&1
    fi
  # if it's a cron job, remove Draft releases on GitHub, only on macOS build
  # These Draft releases exists when there's a broken release from Travis
  - |
    if [[ $TRAVIS_EVENT_TYPE == 'cron' && "$TRAVIS_OS_NAME" == osx ]]; then
      brew update
      brew outdated hub || brew upgrade hub
      # hub expect the env var GITHUB_TOKEN and I'm too lazy to rename the one I added on Travis
      GITHUB_TOKEN="$GH_TOKEN_SECURE" hub release -f "%T (%S) %n" --include-drafts | grep " (draft)" | awk '{print $1}' | xargs -t -n1 hub release delete || :
    fi
  # zip pandoc binary and move to dist/ if it is the git-tag build (GitHub Releases)
  - |
    if [[ ! -z "$TRAVIS_TAG" ]]; then
      mkdir -p $filename
      mv $path2pandoc $filename
      zip $filename.zip $filename/pandoc
      mkdir -p dist
      mv $filename.zip dist/
    fi
  # debug
  - ls -l dist/
deploy:
  provider: releases
  api_key: "$GH_TOKEN_SECURE"
  file_glob: true
  file: "dist/*"
  skip_cleanup: true
  on:
    tags: true
env:
  global:
    secure: PDNr60bZ/drP2nEkW+8mP9DNPONjElxMrxLSsVtXcDLJbDZPmyFahgiHmYERYiUGXQmzuyQbqQNBydFnHUbeRdZ+owLGzTIv8RzZ1SX+7OKZTwc38cJV3nWq3/F57DXsI32IW21RU1JN0HjCi33X4pDlrz597D78LKS3wRAREgxYMcq1FO+GtQ8B7NdLgFni0g94GiIUOyDoAut1yh43V7LoMtt6izQFJFyENUsaHl6xhhdxBoE6qnNhwP+CxscsCf+keezwCFgjuV+cwmxDhspY5Kx/bPfN0c2/Dwgv/nq+JjsbvVYJUjg/gHvg2dlwkGZKXIn8YmI492UwYxSOJ3TgLktdEgrkjRDPGwRvGpkqkZcZg65BEaTNzb/mj+kqd1sGo3NAfuDP8ArqJrYM2G4qfD2yIDKsFSMnIOH+6g6jmTEVPQt9yA2a3ZyUrXzdgs2i/AtsmUB4YYWHcIjcsjmdGZm6CgG3BMIMUmNuWZk9Ad3YEibd6raZ52RuTkICm0UQjCckg4QG10gS1ZYTTLyJle8f2HWxZZixBGfJQMmJsfn8jFoGsl9SKIseQ3VtEnmsHXSqW9tADFQ9+3n7wiCe+3mUaBVbKhKs6LCEf+oHi/nnkOSbPePdd43gBx3u85dww7jwoE5zDU22zWEBTa3wLztZfHAut8BQ5bYIeXw=
